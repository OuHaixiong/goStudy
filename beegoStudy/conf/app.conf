# beego 目前支持 INI、XML、JSON、YAML 格式的配置文件解析，但是默认采用了 INI 格式解析。配置的key不区分大小写
; 项目名称（应用名称），默认：beego （这样单独写一行是可以的，不能写在同一行）
appname = beegoStudy
# 监听的端口号
# httpport = 8080
; 运行环境（应用运行模式）:dev\test\prod，默认dev：开发模式
runmode="dev"
# httpaddr = "127.0.0.1"

# 配置项的值可以用引号也可以不用
mysqlurls = "127.0.0.1"
mysqluser = "root"
mysqlpass = pass***
mysqldb = beeTest

# RouterCaseSensitive = true 是否路由忽略大小写匹配，默认是 true，区分大小写
# ServerName = "beego" beego 服务器默认在请求的时候输出 server 为 beego。
# CopyRequestBody = false 是否允许在 HTTP 请求时，返回原始请求体数据字节，默认为 false （GET or HEAD or 上传文件请求除外）
# EnableGzip = false 是否开启 gzip 支持，默认为 false 不支持 gzip，一旦开启了 gzip，那么在模板输出的内容会进行 gzip 或者 zlib 压缩，根据用户的 Accept-Encoding 来判断。
# Gzip允许用户自定义压缩级别、压缩长度阈值和针对请求类型压缩:
# 压缩级别, gzipCompressLevel = 9,取值为 1~9,如果不设置为 1(最快压缩)
# 压缩长度阈值, gzipMinLength = 256,当原始内容长度大于此阈值时才开启压缩,默认为 20B(ngnix默认长度)
# 请求类型, includedMethods = get;post,针对哪些请求类型进行压缩,默认只针对 GET 请求压缩

# MaxMemory = 1 << 26 文件上传默认内存缓存大小，默认值是 1 << 26(64M)。
# EnableErrorsShow = true 是否显示系统错误信息，默认为 true。
# EnableErrorsRender = true  是否将错误信息进行渲染，默认值为 true，即出错会提示友好的出错页面，对于 API 类型的应用可能需要将该选项设置为 false 以阻止在 dev 模式下不必要的模板渲染信息返回。
# autorender = false 是否模板自动渲染，默认值为 true，对于 API 类型的应用，应用需要把该选项设置为 false，不需要渲染模板
# recoverpanic = false 是否异常恢复，默认值为 true，即当应用出现异常的情况，通过 recover 恢复回来，而不会导致应用异常退出。
# viewspath = "myview" 模板路径，默认值是 views。
# runmode = "${ProRunMode||dev}" 优先使用环境变量ProRunMode

# 多个配置文件可以通过include的方式引入进来
include "test.conf"

[redis]
; 如果分段了，key是可以重名的
mysqlpass = 127.0.0.1

# 在不用的runmode下，可以有不同的配置。读取方式和读取段的方式是一样的：beego.AppConfig.String("dev::mysqluser")。
[dev]
httpport = 8080

[prod]
httpport = 8088

[test]
httpport = 8888
logpath = xxx/XX